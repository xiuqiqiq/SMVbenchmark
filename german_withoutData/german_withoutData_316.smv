MODULE main
VAR
Cache[1].State : {i, s, e};
Cache[2].State : {i, s, e};
Chan1[1].Cmd : {empty, reqs, reqe};
Chan1[2].Cmd : {empty, reqs, reqe};
Chan2[1].Cmd : {empty, inv, gnts, gnte};
Chan2[2].Cmd : {empty, inv, gnts, gnte};
Chan3[1].Cmd : {empty, invack};
Chan3[2].Cmd : {empty, invack};
InvSet[1] : boolean;
InvSet[2] : boolean;
ShrSet[1] : boolean;
ShrSet[2] : boolean;
ExGntd : boolean;
CurCmd : {empty, reqs, reqe};

--------------------

n_RecvGntE__1 : process Proc__n_RecvGntE__1(Chan2[1].Cmd, Cache[1].State);

n_RecvGntE__2 : process Proc__n_RecvGntE__2(Chan2[2].Cmd, Cache[2].State);

n_RecvGntS__1 : process Proc__n_RecvGntS__1(Chan2[1].Cmd, Cache[1].State);

n_RecvGntS__2 : process Proc__n_RecvGntS__2(Chan2[2].Cmd, Cache[2].State);

n_SendGntE__1 : process Proc__n_SendGntE__1(Chan2[1].Cmd, ShrSet[1], ShrSet[2], CurCmd, ExGntd);

n_SendGntE__2 : process Proc__n_SendGntE__2(Chan2[2].Cmd, ShrSet[1], ShrSet[2], CurCmd, ExGntd);

n_SendGntS__1 : process Proc__n_SendGntS__1(Chan2[1].Cmd, ShrSet[1], CurCmd, ExGntd);

n_SendGntS__2 : process Proc__n_SendGntS__2(Chan2[2].Cmd, ShrSet[2], CurCmd, ExGntd);

n_RecvInvAck1__1 : process Proc__n_RecvInvAck1__1(Chan3[1].Cmd, ShrSet[1], CurCmd, ExGntd);

n_RecvInvAck1__2 : process Proc__n_RecvInvAck1__2(Chan3[2].Cmd, ShrSet[2], CurCmd, ExGntd);

n_RecvInvAck2__1 : process Proc__n_RecvInvAck2__1(Chan3[1].Cmd, ShrSet[1], CurCmd, ExGntd);

n_RecvInvAck2__2 : process Proc__n_RecvInvAck2__2(Chan3[2].Cmd, ShrSet[2], CurCmd, ExGntd);

n_SendInvAck__1 : process Proc__n_SendInvAck__1(Chan2[1].Cmd, Chan3[1].Cmd, Cache[1].State);

n_SendInvAck__2 : process Proc__n_SendInvAck__2(Chan2[2].Cmd, Chan3[2].Cmd, Cache[2].State);

n_SendInv__1 : process Proc__n_SendInv__1(Chan2[1].Cmd, InvSet[1], CurCmd, ExGntd);

n_SendInv__2 : process Proc__n_SendInv__2(Chan2[2].Cmd, InvSet[2], CurCmd, ExGntd);

n_RecvReqE__1 : process Proc__n_RecvReqE__1(Chan1[1].Cmd, ShrSet[1], InvSet[1], ShrSet[2], InvSet[2], CurCmd);

n_RecvReqE__2 : process Proc__n_RecvReqE__2(Chan1[2].Cmd, ShrSet[1], InvSet[1], ShrSet[2], InvSet[2], CurCmd);

n_RecvReqS__1 : process Proc__n_RecvReqS__1(Chan1[1].Cmd, ShrSet[1], InvSet[1], ShrSet[2], InvSet[2], CurCmd);

n_RecvReqS__2 : process Proc__n_RecvReqS__2(Chan1[2].Cmd, ShrSet[1], InvSet[1], ShrSet[2], InvSet[2], CurCmd);

n_SendReqE__1 : process Proc__n_SendReqE__1(Chan1[1].Cmd, Cache[1].State);

n_SendReqE__2 : process Proc__n_SendReqE__2(Chan1[2].Cmd, Cache[2].State);

n_SendReqS__1 : process Proc__n_SendReqS__1(Chan1[1].Cmd, Cache[1].State);

n_SendReqS__2 : process Proc__n_SendReqS__2(Chan1[2].Cmd, Cache[2].State);

--------------------

ASSIGN
init(Chan1[1].Cmd) := case
TRUE : empty;
esac;
init(Chan1[2].Cmd) := case
TRUE : empty;
esac;
init(Chan2[1].Cmd) := case
TRUE : empty;
esac;
init(Chan2[2].Cmd) := case
TRUE : empty;
esac;
init(Chan3[1].Cmd) := case
TRUE : empty;
esac;
init(Chan3[2].Cmd) := case
TRUE : empty;
esac;
init(Cache[1].State) := case
TRUE : i;
esac;
init(Cache[2].State) := case
TRUE : i;
esac;
init(InvSet[1]) := case
TRUE : FALSE;
esac;
init(InvSet[2]) := case
TRUE : FALSE;
esac;
init(ShrSet[1]) := case
TRUE : FALSE;
esac;
init(ShrSet[2]) := case
TRUE : FALSE;
esac;
init(ExGntd) := case
TRUE : FALSE;
esac;
init(CurCmd) := case
TRUE : empty;
esac;

--------------------



--------------------

MODULE Proc__n_RecvGntE__1(Chan2__1__Cmd, Cache__1__State)
ASSIGN
next(Cache__1__State) := case
(Chan2__1__Cmd = gnte) : e;
TRUE : Cache__1__State;
esac;
next(Chan2__1__Cmd) := case
(Chan2__1__Cmd = gnte) : empty;
TRUE : Chan2__1__Cmd;
esac;

---------

MODULE Proc__n_RecvGntE__2(Chan2__2__Cmd, Cache__2__State)
ASSIGN
next(Cache__2__State) := case
(Chan2__2__Cmd = gnte) : e;
TRUE : Cache__2__State;
esac;
next(Chan2__2__Cmd) := case
(Chan2__2__Cmd = gnte) : empty;
TRUE : Chan2__2__Cmd;
esac;

---------

MODULE Proc__n_RecvGntS__1(Chan2__1__Cmd, Cache__1__State)
ASSIGN
next(Cache__1__State) := case
(Chan2__1__Cmd = gnts) : s;
TRUE : Cache__1__State;
esac;
next(Chan2__1__Cmd) := case
(Chan2__1__Cmd = gnts) : empty;
TRUE : Chan2__1__Cmd;
esac;

---------

MODULE Proc__n_RecvGntS__2(Chan2__2__Cmd, Cache__2__State)
ASSIGN
next(Cache__2__State) := case
(Chan2__2__Cmd = gnts) : s;
TRUE : Cache__2__State;
esac;
next(Chan2__2__Cmd) := case
(Chan2__2__Cmd = gnts) : empty;
TRUE : Chan2__2__Cmd;
esac;

---------

MODULE Proc__n_SendGntE__1(Chan2__1__Cmd, ShrSet__1, ShrSet__2, CurCmd, ExGntd)
ASSIGN
next(Chan2__1__Cmd) := case
(CurCmd = reqe) & (Chan2__1__Cmd = empty) & (ExGntd = FALSE) & (ShrSet__2 = FALSE) & (ShrSet__1 = FALSE) : gnte;
TRUE : Chan2__1__Cmd;
esac;
next(ShrSet__1) := case
(CurCmd = reqe) & (Chan2__1__Cmd = empty) & (ExGntd = FALSE) & (ShrSet__2 = FALSE) & (ShrSet__1 = FALSE) : TRUE;
TRUE : ShrSet__1;
esac;
next(ExGntd) := case
(CurCmd = reqe) & (Chan2__1__Cmd = empty) & (ExGntd = FALSE) & (ShrSet__2 = FALSE) & (ShrSet__1 = FALSE) : TRUE;
TRUE : ExGntd;
esac;
next(CurCmd) := case
(CurCmd = reqe) & (Chan2__1__Cmd = empty) & (ExGntd = FALSE) & (ShrSet__2 = FALSE) & (ShrSet__1 = FALSE) : empty;
TRUE : CurCmd;
esac;

---------

MODULE Proc__n_SendGntE__2(Chan2__2__Cmd, ShrSet__1, ShrSet__2, CurCmd, ExGntd)
ASSIGN
next(Chan2__2__Cmd) := case
(CurCmd = reqe) & (Chan2__2__Cmd = empty) & (ExGntd = FALSE) & (ShrSet__2 = FALSE) & (ShrSet__1 = FALSE) : gnte;
TRUE : Chan2__2__Cmd;
esac;
next(ShrSet__2) := case
(CurCmd = reqe) & (Chan2__2__Cmd = empty) & (ExGntd = FALSE) & (ShrSet__2 = FALSE) & (ShrSet__1 = FALSE) : TRUE;
TRUE : ShrSet__2;
esac;
next(ExGntd) := case
(CurCmd = reqe) & (Chan2__2__Cmd = empty) & (ExGntd = FALSE) & (ShrSet__2 = FALSE) & (ShrSet__1 = FALSE) : TRUE;
TRUE : ExGntd;
esac;
next(CurCmd) := case
(CurCmd = reqe) & (Chan2__2__Cmd = empty) & (ExGntd = FALSE) & (ShrSet__2 = FALSE) & (ShrSet__1 = FALSE) : empty;
TRUE : CurCmd;
esac;

---------

MODULE Proc__n_SendGntS__1(Chan2__1__Cmd, ShrSet__1, CurCmd, ExGntd)
ASSIGN
next(Chan2__1__Cmd) := case
(CurCmd = reqs) & (Chan2__1__Cmd = empty) & (ExGntd = FALSE) : gnts;
TRUE : Chan2__1__Cmd;
esac;
next(ShrSet__1) := case
(CurCmd = reqs) & (Chan2__1__Cmd = empty) & (ExGntd = FALSE) : TRUE;
TRUE : ShrSet__1;
esac;
next(CurCmd) := case
(CurCmd = reqs) & (Chan2__1__Cmd = empty) & (ExGntd = FALSE) : empty;
TRUE : CurCmd;
esac;

---------

MODULE Proc__n_SendGntS__2(Chan2__2__Cmd, ShrSet__2, CurCmd, ExGntd)
ASSIGN
next(Chan2__2__Cmd) := case
(CurCmd = reqs) & (Chan2__2__Cmd = empty) & (ExGntd = FALSE) : gnts;
TRUE : Chan2__2__Cmd;
esac;
next(ShrSet__2) := case
(CurCmd = reqs) & (Chan2__2__Cmd = empty) & (ExGntd = FALSE) : TRUE;
TRUE : ShrSet__2;
esac;
next(CurCmd) := case
(CurCmd = reqs) & (Chan2__2__Cmd = empty) & (ExGntd = FALSE) : empty;
TRUE : CurCmd;
esac;

---------

MODULE Proc__n_RecvInvAck1__1(Chan3__1__Cmd, ShrSet__1, CurCmd, ExGntd)
ASSIGN
next(Chan3__1__Cmd) := case
(Chan3__1__Cmd = invack) & CurCmd != empty & (ExGntd = TRUE) : empty;
TRUE : Chan3__1__Cmd;
esac;
next(ShrSet__1) := case
(Chan3__1__Cmd = invack) & CurCmd != empty & (ExGntd = TRUE) : FALSE;
TRUE : ShrSet__1;
esac;
next(ExGntd) := case
(Chan3__1__Cmd = invack) & CurCmd != empty & (ExGntd = TRUE) : FALSE;
TRUE : ExGntd;
esac;

---------

MODULE Proc__n_RecvInvAck1__2(Chan3__2__Cmd, ShrSet__2, CurCmd, ExGntd)
ASSIGN
next(Chan3__2__Cmd) := case
(Chan3__2__Cmd = invack) & CurCmd != empty & (ExGntd = TRUE) : empty;
TRUE : Chan3__2__Cmd;
esac;
next(ShrSet__2) := case
(Chan3__2__Cmd = invack) & CurCmd != empty & (ExGntd = TRUE) : FALSE;
TRUE : ShrSet__2;
esac;
next(ExGntd) := case
(Chan3__2__Cmd = invack) & CurCmd != empty & (ExGntd = TRUE) : FALSE;
TRUE : ExGntd;
esac;

---------

MODULE Proc__n_RecvInvAck2__1(Chan3__1__Cmd, ShrSet__1, CurCmd, ExGntd)
ASSIGN
next(Chan3__1__Cmd) := case
(Chan3__1__Cmd = invack) & CurCmd != empty & (ExGntd = FALSE) : empty;
TRUE : Chan3__1__Cmd;
esac;
next(ShrSet__1) := case
(Chan3__1__Cmd = invack) & CurCmd != empty & (ExGntd = FALSE) : FALSE;
TRUE : ShrSet__1;
esac;

---------

MODULE Proc__n_RecvInvAck2__2(Chan3__2__Cmd, ShrSet__2, CurCmd, ExGntd)
ASSIGN
next(Chan3__2__Cmd) := case
(Chan3__2__Cmd = invack) & CurCmd != empty & (ExGntd = FALSE) : empty;
TRUE : Chan3__2__Cmd;
esac;
next(ShrSet__2) := case
(Chan3__2__Cmd = invack) & CurCmd != empty & (ExGntd = FALSE) : FALSE;
TRUE : ShrSet__2;
esac;

---------

MODULE Proc__n_SendInvAck__1(Chan2__1__Cmd, Chan3__1__Cmd, Cache__1__State)
ASSIGN
next(Chan2__1__Cmd) := case
(Chan2__1__Cmd = inv) & (Chan3__1__Cmd = empty) : empty;
TRUE : Chan2__1__Cmd;
esac;
next(Chan3__1__Cmd) := case
(Chan2__1__Cmd = inv) & (Chan3__1__Cmd = empty) : invack;
TRUE : Chan3__1__Cmd;
esac;
next(Cache__1__State) := case
(Chan2__1__Cmd = inv) & (Chan3__1__Cmd = empty) : i;
TRUE : Cache__1__State;
esac;

---------

MODULE Proc__n_SendInvAck__2(Chan2__2__Cmd, Chan3__2__Cmd, Cache__2__State)
ASSIGN
next(Chan2__2__Cmd) := case
(Chan2__2__Cmd = inv) & (Chan3__2__Cmd = empty) : empty;
TRUE : Chan2__2__Cmd;
esac;
next(Chan3__2__Cmd) := case
(Chan2__2__Cmd = inv) & (Chan3__2__Cmd = empty) : invack;
TRUE : Chan3__2__Cmd;
esac;
next(Cache__2__State) := case
(Chan2__2__Cmd = inv) & (Chan3__2__Cmd = empty) : i;
TRUE : Cache__2__State;
esac;

---------

MODULE Proc__n_SendInv__1(Chan2__1__Cmd, InvSet__1, CurCmd, ExGntd)
ASSIGN
next(Chan2__1__Cmd) := case
(Chan2__1__Cmd = empty) & (InvSet__1 = TRUE) & ((CurCmd = reqe) | (CurCmd = reqs) & (ExGntd = TRUE)) : inv;
TRUE : Chan2__1__Cmd;
esac;
next(InvSet__1) := case
(Chan2__1__Cmd = empty) & (InvSet__1 = TRUE) & ((CurCmd = reqe) | (CurCmd = reqs) & (ExGntd = TRUE)) : FALSE;
TRUE : InvSet__1;
esac;

---------

MODULE Proc__n_SendInv__2(Chan2__2__Cmd, InvSet__2, CurCmd, ExGntd)
ASSIGN
next(Chan2__2__Cmd) := case
(Chan2__2__Cmd = empty) & (InvSet__2 = TRUE) & ((CurCmd = reqe) | (CurCmd = reqs) & (ExGntd = TRUE)) : inv;
TRUE : Chan2__2__Cmd;
esac;
next(InvSet__2) := case
(Chan2__2__Cmd = empty) & (InvSet__2 = TRUE) & ((CurCmd = reqe) | (CurCmd = reqs) & (ExGntd = TRUE)) : FALSE;
TRUE : InvSet__2;
esac;

---------

MODULE Proc__n_RecvReqE__1(Chan1__1__Cmd, ShrSet__1, InvSet__1, ShrSet__2, InvSet__2, CurCmd)
ASSIGN
next(CurCmd) := case
(CurCmd = empty) & (Chan1__1__Cmd = reqe) : reqe;
TRUE : CurCmd;
esac;
next(Chan1__1__Cmd) := case
(CurCmd = empty) & (Chan1__1__Cmd = reqe) : empty;
TRUE : Chan1__1__Cmd;
esac;
next(InvSet__1) := case
(CurCmd = empty) & (Chan1__1__Cmd = reqe) : ShrSet__1;
TRUE : InvSet__1;
esac;
next(InvSet__2) := case
(CurCmd = empty) & (Chan1__1__Cmd = reqe) : ShrSet__2;
TRUE : InvSet__2;
esac;

---------

MODULE Proc__n_RecvReqE__2(Chan1__2__Cmd, ShrSet__1, InvSet__1, ShrSet__2, InvSet__2, CurCmd)
ASSIGN
next(CurCmd) := case
(CurCmd = empty) & (Chan1__2__Cmd = reqe) : reqe;
TRUE : CurCmd;
esac;
next(Chan1__2__Cmd) := case
(CurCmd = empty) & (Chan1__2__Cmd = reqe) : empty;
TRUE : Chan1__2__Cmd;
esac;
next(InvSet__1) := case
(CurCmd = empty) & (Chan1__2__Cmd = reqe) : ShrSet__1;
TRUE : InvSet__1;
esac;
next(InvSet__2) := case
(CurCmd = empty) & (Chan1__2__Cmd = reqe) : ShrSet__2;
TRUE : InvSet__2;
esac;

---------

MODULE Proc__n_RecvReqS__1(Chan1__1__Cmd, ShrSet__1, InvSet__1, ShrSet__2, InvSet__2, CurCmd)
ASSIGN
next(CurCmd) := case
(CurCmd = empty) & (Chan1__1__Cmd = reqs) : reqs;
TRUE : CurCmd;
esac;
next(Chan1__1__Cmd) := case
(CurCmd = empty) & (Chan1__1__Cmd = reqs) : empty;
TRUE : Chan1__1__Cmd;
esac;
next(InvSet__1) := case
(CurCmd = empty) & (Chan1__1__Cmd = reqs) : ShrSet__1;
TRUE : InvSet__1;
esac;
next(InvSet__2) := case
(CurCmd = empty) & (Chan1__1__Cmd = reqs) : ShrSet__2;
TRUE : InvSet__2;
esac;

---------

MODULE Proc__n_RecvReqS__2(Chan1__2__Cmd, ShrSet__1, InvSet__1, ShrSet__2, InvSet__2, CurCmd)
ASSIGN
next(CurCmd) := case
(CurCmd = empty) & (Chan1__2__Cmd = reqs) : reqs;
TRUE : CurCmd;
esac;
next(Chan1__2__Cmd) := case
(CurCmd = empty) & (Chan1__2__Cmd = reqs) : empty;
TRUE : Chan1__2__Cmd;
esac;
next(InvSet__1) := case
(CurCmd = empty) & (Chan1__2__Cmd = reqs) : ShrSet__1;
TRUE : InvSet__1;
esac;
next(InvSet__2) := case
(CurCmd = empty) & (Chan1__2__Cmd = reqs) : ShrSet__2;
TRUE : InvSet__2;
esac;

---------

MODULE Proc__n_SendReqE__1(Chan1__1__Cmd, Cache__1__State)
ASSIGN
next(Chan1__1__Cmd) := case
(Chan1__1__Cmd = empty) & ((Cache__1__State = i) | (Cache__1__State = s)) : reqe;
TRUE : Chan1__1__Cmd;
esac;

---------

MODULE Proc__n_SendReqE__2(Chan1__2__Cmd, Cache__2__State)
ASSIGN
next(Chan1__2__Cmd) := case
(Chan1__2__Cmd = empty) & ((Cache__2__State = i) | (Cache__2__State = s)) : reqe;
TRUE : Chan1__2__Cmd;
esac;

---------

MODULE Proc__n_SendReqS__1(Chan1__1__Cmd, Cache__1__State)
ASSIGN
next(Chan1__1__Cmd) := case
(Chan1__1__Cmd = empty) & (Cache__1__State = i) : reqs;
TRUE : Chan1__1__Cmd;
esac;

---------

MODULE Proc__n_SendReqS__2(Chan1__2__Cmd, Cache__2__State)
ASSIGN
next(Chan1__2__Cmd) := case
(Chan1__2__Cmd = empty) & (Cache__2__State = i) : reqs;
TRUE : Chan1__2__Cmd;
esac;

---------

INVAR !(CurCmd = reqs & InvSet[1] = TRUE);